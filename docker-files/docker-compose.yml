version: '3.4' 
services:  
  certbot:
    container_name: 'certbot'
    build: 
      context: .
      dockerfile: Dockerfile-certbot 
    restart: "no"
    volumes:
      ## add restart nginx script to install - CHANGE mod 755 for it
      - ../docker-volumes/etc/letsencrypt:/etc/letsencrypt
      - ../docker-volumes/var/lib/letsencrypt:/var/lib/letsencrypt
      - ../docker-volumes/letsencrypt-docker-nginx/src/letsencrypt/letsencrypt-site:/data/letsencrypt
      - ../docker-volumes/var/log/letsencrypt:/var/log/letsencrypt
      - ../docker-volumes/.aws:/root/.aws 
      - ../docker-volumes/etc/nginx/conf.d:/etc/nginx/conf.d  
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: 50m
        # If you are manually renewing all of your certificates, the --force-renewal - https://certbot.eff.org/docs/using.html?highlight=hook#pre-and-post-validation-hooks 

    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot  certonly  --staging --webroot --webroot-path /data/letsencrypt --email support@floatingcloud.io --agree-tos --no-eff-email --non-interactive -d ${FQDN}  --deploy-hook  /etc/letsencrypt/renewal-hooks/deploy/edit-domain-name-for-cert.sh; sleep 24h & wait $${!}; done;'"
      ##  Add deploy hook either in etc\letsencrypt\renewal-hooks\deploy or here with flag, it needs to edit nginx default.conf with correct domain, then restart nginx  ## ADD post hook restarts nginx with docker  
     # https://github.com/certbot/certbot/issues/6180#issuecomment-539233867 
    depends_on: 
      - nginx 

  nginx:  
    container_name: 'nginx'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../docker-volumes/html:/html
      - ../docker-volumes/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf  
      - ../docker-volumes/etc/letsencrypt:/etc/letsencrypt
      - ../docker-volumes/var/lib/letsencrypt:/var/lib/letsencrypt 
      - ../docker-volumes/letsencrypt-docker-nginx/src/letsencrypt/letsencrypt-site:/data/letsencrypt
      - ../docker-volumes/var/log/letsencrypt:/var/log/letsencrypt
    logging:
      options:
        max-size: 50m
    # entrypoint: "/bin/sh -c 'while :; do sleep 24h & wait $${!}; /usr/sbin/nginx -s reload; done & nginx -g \"daemon off;\"'"
    healthcheck:
      test: ["CMD", "ls", "/etc/letsencrypt/archive/${FQDN}"]
      interval: 15s
      timeout: 2s
      retries: 3
      start_period: 40s






 # entrypoitn was needed due to not really being allow to turn nginx off  
      #  entrypoint: "/bin/sh -c 'while :; do sleep 45d & wait $${!}; /usr/sbin/nginx -s reload; done & nginx -g \"daemon off;\"'"
    

    # following are notes for certbot entrypoint options
    #from /proxy-postgres-3/docker-files/docker-compose.yml - used entrypoint 
    # command: "/bin/sh -c 'trap exit TERM; while :; do certbot  renew --post-hook /usr/sbin/restart-nginx.sh; done;'"
    ## for acme-challenge - ADD to calender when it needs to be renewed
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot  renew ; sleep 12h & wait $${!}; done;'"
    # FOR Acme challenge - on website
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot  certonly  --webroot --webroot-path /var/www/html  --email devops@.com --agree-tos --no-eff-email --non-interactive -d ${FQDN}; sleep 12h & wait $${!}; done;'"
    ##  FOR  route-53
    #entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --email devops@.com --agree-tos --no-eff-email --non-interactive -d ${FQDN} --dns-route53 --server https://acme-v02.api.letsencrypt.org/directory ; sleep 12h & wait $${!}; done;'"    
    # from previous - only creates, doesn't renew # https://community.letsencrypt.org/t/hook-after-initially-obtaining-certificate/103484
    #command: certonly --email support@floatingcloud.io --agree-tos --no-eff-email --non-interactive -d hmail.float.i.ng --staging --webroot -w /data/letsencrypt  # --deploy-hook /path/to/script.sh   nginx:


#fix below






#entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot  renew --post-hook /usr/sbin/restart-nginx.sh; done;'" # <<<---- this one needs to have docker containerd mounted in container
#To restart service nicely do  docker kill --signal=SIGHUP nginx - might keep 
#script contents restart-nginx.sh
##!/bin/bash
#curl -X POST --unix-socket /run/docker.sock http://docker/containers/nginx/restart
#sleep $(( $(date --date="tomorrow 4AM" +%s)-$(date +%s) ))


